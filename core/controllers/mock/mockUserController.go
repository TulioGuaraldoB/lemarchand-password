// Code generated by MockGen. DO NOT EDIT.
// Source: core/controllers/userController.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIUserController is a mock of IUserController interface.
type MockIUserController struct {
	ctrl     *gomock.Controller
	recorder *MockIUserControllerMockRecorder
}

// MockIUserControllerMockRecorder is the mock recorder for MockIUserController.
type MockIUserControllerMockRecorder struct {
	mock *MockIUserController
}

// NewMockIUserController creates a new mock instance.
func NewMockIUserController(ctrl *gomock.Controller) *MockIUserController {
	mock := &MockIUserController{ctrl: ctrl}
	mock.recorder = &MockIUserControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserController) EXPECT() *MockIUserControllerMockRecorder {
	return m.recorder
}

// VerifyPassword mocks base method.
func (m *MockIUserController) VerifyPassword(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VerifyPassword", ctx)
}

// VerifyPassword indicates an expected call of VerifyPassword.
func (mr *MockIUserControllerMockRecorder) VerifyPassword(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyPassword", reflect.TypeOf((*MockIUserController)(nil).VerifyPassword), ctx)
}
